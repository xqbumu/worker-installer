// Code generated by qtc from "install.rb.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line handler/install.rb.qtpl:1
package handler

//line handler/install.rb.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line handler/install.rb.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line handler/install.rb.qtpl:1
func StreamRuby(qw422016 *qt422016.Writer, r Result) {
//line handler/install.rb.qtpl:1
	qw422016.N().S(`
require "formula"

class Installer < Formula
  homepage "https://github.com/`)
//line handler/install.rb.qtpl:5
	qw422016.E().S(r.User)
//line handler/install.rb.qtpl:5
	qw422016.N().S(`/`)
//line handler/install.rb.qtpl:5
	qw422016.E().S(r.Program)
//line handler/install.rb.qtpl:5
	qw422016.N().S(`"
  version "`)
//line handler/install.rb.qtpl:6
	qw422016.E().S(r.Release)
//line handler/install.rb.qtpl:6
	qw422016.N().S(`"

  `)
//line handler/install.rb.qtpl:8
	for _, i := range r.Assets {
//line handler/install.rb.qtpl:8
		if i.Arch != "arm" {
//line handler/install.rb.qtpl:8
			qw422016.N().S(`if `)
//line handler/install.rb.qtpl:8
			if i.IsMac() {
//line handler/install.rb.qtpl:8
				qw422016.N().S(`!`)
//line handler/install.rb.qtpl:8
			}
//line handler/install.rb.qtpl:8
			qw422016.N().S(`OS.linux? && `)
//line handler/install.rb.qtpl:8
			if i.Is32Bit() {
//line handler/install.rb.qtpl:8
				qw422016.N().S(`!`)
//line handler/install.rb.qtpl:8
			}
//line handler/install.rb.qtpl:8
			qw422016.N().S(`Hardware.is_64_bit?
    url "`)
//line handler/install.rb.qtpl:9
			qw422016.E().S(i.URL)
//line handler/install.rb.qtpl:9
			qw422016.N().S(`"
    `)
//line handler/install.rb.qtpl:10
			if len(i.SHA256) > 0 {
//line handler/install.rb.qtpl:10
				qw422016.N().S(`sha256 "`)
//line handler/install.rb.qtpl:10
				qw422016.E().S(i.SHA256)
//line handler/install.rb.qtpl:10
				qw422016.N().S(`"`)
//line handler/install.rb.qtpl:10
			}
//line handler/install.rb.qtpl:10
			qw422016.N().S(`
  els`)
//line handler/install.rb.qtpl:11
		}
//line handler/install.rb.qtpl:11
	}
//line handler/install.rb.qtpl:11
	qw422016.N().S(`e
    onoe "Not supported"
  end

  depends_on :arch => :intel

  def install
    bin.install '`)
//line handler/install.rb.qtpl:18
	qw422016.E().S(r.Program)
//line handler/install.rb.qtpl:18
	qw422016.N().S(`'
  end

  def caveats
    "`)
//line handler/install.rb.qtpl:22
	qw422016.E().S(r.Program)
//line handler/install.rb.qtpl:22
	qw422016.N().S(` was installed using https://github.com/cxjava/installer"
  end
end
`)
//line handler/install.rb.qtpl:25
}

//line handler/install.rb.qtpl:25
func WriteRuby(qq422016 qtio422016.Writer, r Result) {
//line handler/install.rb.qtpl:25
	qw422016 := qt422016.AcquireWriter(qq422016)
//line handler/install.rb.qtpl:25
	StreamRuby(qw422016, r)
//line handler/install.rb.qtpl:25
	qt422016.ReleaseWriter(qw422016)
//line handler/install.rb.qtpl:25
}

//line handler/install.rb.qtpl:25
func Ruby(r Result) string {
//line handler/install.rb.qtpl:25
	qb422016 := qt422016.AcquireByteBuffer()
//line handler/install.rb.qtpl:25
	WriteRuby(qb422016, r)
//line handler/install.rb.qtpl:25
	qs422016 := string(qb422016.B)
//line handler/install.rb.qtpl:25
	qt422016.ReleaseByteBuffer(qb422016)
//line handler/install.rb.qtpl:25
	return qs422016
//line handler/install.rb.qtpl:25
}
